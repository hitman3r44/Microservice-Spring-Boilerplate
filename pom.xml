<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.12.RELEASE</version>
        <relativePath/>
    </parent>

    <groupId>com.wolverine.solutions</groupId>
    <artifactId>bookstore-application-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <build>
        <plugins>
            <plugin>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <groupId>org.springframework.boot</groupId>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>
                        -javaagent:${settings.localRepository}/org/jmockit/jmockit/1.49/jmockit-1.49.jar
                    </argLine>
                </configuration>
                <groupId>org.apache.maven.plugins</groupId>
                <version>2.22.2</version>
            </plugin>
        </plugins>
    </build>

    <modules>
        <module>bookstore-commons</module>
        <module>bookstore-feign</module>
        <module>bookstore-api-gateway-service</module>
        <module>bookstore-eureka-discovery-service</module>
        <module>bookstore-account-service</module>
        <module>bookstore-billing-service</module>
        <module>bookstore-catalog-service</module>
        <module>bookstore-order-service</module>
        <module>bookstore-payment-service</module>
    </modules>
    <packaging>pom</packaging>

    <dependencies>

      <!--        <dependency>-->
      <!--            <artifactId>bookstore-commons</artifactId>-->
      <!--            <groupId>com.wolverine.solutions</groupId>-->
      <!--            <scope>compile</scope>-->
      <!--            <version>0.0.1-SNAPSHOT</version>-->
      <!--        </dependency>-->

      <dependency>
        <artifactId>h2</artifactId>
        <groupId>com.h2database</groupId>
        <version>1.4.197</version>
      </dependency>

      <dependency>
        <artifactId>mysql-connector-java</artifactId>
        <groupId>mysql</groupId>
        <scope>runtime</scope>
      </dependency>

      <dependency>
        <artifactId>junit</artifactId>
        <groupId>junit</groupId>
        <scope>test</scope>
        <version>4.13.2</version>
      </dependency>

      <!-- https://mvnrepository.com/artifact/org.modelmapper/modelmapper -->
      <dependency>
        <artifactId>modelmapper</artifactId>
        <groupId>org.modelmapper</groupId>
        <version>${modelmapper.version}</version>
      </dependency>

      <dependency>
        <artifactId>mapstruct</artifactId>
        <groupId>org.mapstruct</groupId>
        <scope>compile</scope>
        <version>${mapstruct.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-actuator</artifactId>
      </dependency>

      <dependency>
        <artifactId>spring-boot-starter-test</artifactId>
        <groupId>org.springframework.boot</groupId>
        <scope>test</scope>
      </dependency>

      <!-- hot swapping, enable live reload -->
      <dependency>
        <artifactId>spring-boot-devtools</artifactId>
        <groupId>org.springframework.boot</groupId>
        <optional>false</optional>
      </dependency>

      <dependency>
        <artifactId>spring-boot-starter-web</artifactId>
        <groupId>org.springframework.boot</groupId>
      </dependency>

      <!--        <dependency>-->
      <!--            <artifactId>spring-boot-starter-data-jpa</artifactId>-->
      <!--            <groupId>org.springframework.boot</groupId>-->
      <!--        </dependency>-->

      <dependency>
        <artifactId>spring-cloud-starter-sleuth</artifactId>
        <groupId>org.springframework.cloud</groupId>
      </dependency>

      <dependency>
        <artifactId>spring-cloud-starter-zipkin</artifactId>
        <groupId>org.springframework.cloud</groupId>
      </dependency>

        <dependency>
            <artifactId>spring-cloud-sleuth-core</artifactId>
            <groupId>org.springframework.cloud</groupId>
        </dependency>

        <dependency>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
            <groupId>org.springframework.cloud</groupId>
        </dependency>

        <dependency>
            <artifactId>logstash-logback-encoder</artifactId>
            <groupId>net.logstash.logback</groupId>
            <version>7.0.1</version>
        </dependency>

        <dependency>
            <artifactId>logback-classic</artifactId>
            <groupId>ch.qos.logback</groupId>
        </dependency>

        <!--        <dependency>-->
        <!--            <artifactId>unit-test-api</artifactId>-->
        <!--            <groupId>io.github.xiaogangfan</groupId>-->
        <!--            <version>1.0.2</version>-->
        <!--        </dependency>-->


        <dependency>
            <artifactId>lombok</artifactId>
            <groupId>org.projectlombok</groupId>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>3.0.0</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>3.0.0</version>
        </dependency>

        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>

        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
        </dependency>

        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-influx</artifactId>
        </dependency>

        <!--        <dependency>-->
        <!--            <groupId>net.sf.dozer</groupId>-->
        <!--            <artifactId>dozer</artifactId>-->
        <!--            <version>5.5.1</version>-->
        <!--        </dependency>        -->

        <dependency>
            <artifactId>javafaker</artifactId>
            <groupId>com.github.javafaker</groupId>
            <version>0.15</version>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

  <properties>
    <java.version>1.8</java.version>
    <mapstruct.version>1.2.0.Final</mapstruct.version>
    <modelmapper.version>3.1.0</modelmapper.version>
    <spring-cloud.version>Hoxton.SR12</spring-cloud.version>
  </properties>

</project>
